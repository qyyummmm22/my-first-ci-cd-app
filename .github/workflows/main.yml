# .github/workflows/main.yml

# Name of the workflow as it appears in the GitHub Actions UI
name: Build and Test Simple Web App

# Controls when the workflow will run
on:
  # Trigger the workflow on push events to the 'main' or 'master' branch
  push:
    branches: [ main, master ]
  # Trigger the workflow on pull request events to the 'main' or 'master' branch
  pull_request:
    branches: [ main, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Define the 'build' job
  build:
    # Specify the operating system environment for this job to run on
    runs-on: ubuntu-latest

    # Steps define a sequence of tasks that will be executed for this job
    steps:
      # Step 1: Checkout the repository code into the runner's workspace
      - name: Checkout code
        uses: actions/checkout@v4 # Uses a pre-built action to get your code

      # Step 2: Set up Node.js environment (required for npm and running test.js)
      - name: Set up Node.js
        uses: actions/setup-node@v4 # Uses a pre-built action to install Node.js
        with:
          node-version: '18' # Specify Node.js version 18

      # Step 3: Install Node.js dependencies (specifically for our test script's 'fs' and 'path' usage)
      - name: Install dependencies
        run: npm install # Executes 'npm install' in the job's environment

      # Step 4: Verify static files existence (Simulated Build Stage Output)
      # For a real application, this might involve compiling source code (e.g., Java, C++),
      # minifying JavaScript/CSS, or bundling assets.
      # Here, we simply check if index.html is present, simulating a successful build output.
      - name: Verify static files existence (Simulated Build)
        run: | # Multiline command
          echo "Checking for index.html..."
          if [ -f index.html ]; then # Checks if index.html exists as a file
            echo "index.html found. Build step successful!"
          else
            echo "Error: index.html not found. Build failed."
            exit 1 # Exits with a non-zero code to indicate failure
          fi

  # Define the 'test' job
  test:
    # This job will only run AFTER the 'build' job has completed successfully
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code again for the test job
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for the test job
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Install Node.js dependencies for the test job
      - name: Install dependencies
        run: npm install

      # Step 4: Run our basic JavaScript test script
      # This executes the 'npm test' command, which in turn runs 'node test.js'
      # as defined in our package.json
      - name: Run application tests
        run: npm test
